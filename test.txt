{/* <form className='form' onSubmit={handleSubmit(onSubmit)}> */}
<form className='form' onSubmit={(e) => e.preventDefault()}>
    {/* register your input into the hook by invoking the "register" function */}

    {step === 1 && (
        <>
            {/* component halne */}
            <label htmlFor="">First Name</label>
            <input type='text' defaultValue="test" {...register("firstName")} />

            {/* include validation with required or other standard HTML validation rules */}
            <label htmlFor="">Last Name Name</label>
            <input type='text' {...register("lastName", { required: true })} />
            {/* errors will return when field validation fails  */}
            
            {/* {errors.firstName && <span>This field is required</span>}
            {errors.lastName && <span>This field is required</span>} */}

            {/* <input className='input_btn' type="submit" value="Continue" /> */}
        </>

    )}
    {step === 2 ? (
        <>
            <label htmlFor="">Email</label>
            <input type='email' defaultValue="test" {...register("email")} />
        </>
    ) : ""}
    {step === 3 ? (
        <>
            <label htmlFor="">Password</label>
            <input type='password' defaultValue="test" {...register("password")} />
        </>
    ) : ""}


</form>